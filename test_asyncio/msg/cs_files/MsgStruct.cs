// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_struct.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Msg {

  /// <summary>Holder for reflection information generated from msg_struct.proto</summary>
  public static partial class MsgStructReflection {

    #region Descriptor
    /// <summary>File descriptor for msg_struct.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MsgStructReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBtc2dfc3RydWN0LnByb3RvEgNtc2caDm1zZ19lbnVtLnByb3RvIkIKCWNo",
            "YXJfaW5mbxIQCghjaGFyX2lkeBgBIAEoAxIRCgljaGFyX25hbWUYAiABKAkS",
            "EAoIY2hhcl9taWQYAyABKAViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Msg.MsgEnumReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.char_info), global::Msg.char_info.Parser, new[]{ "CharIdx", "CharName", "CharMid" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class char_info : pb::IMessage<char_info> {
    private static readonly pb::MessageParser<char_info> _parser = new pb::MessageParser<char_info>(() => new char_info());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<char_info> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.MsgStructReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public char_info() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public char_info(char_info other) : this() {
      charIdx_ = other.charIdx_;
      charName_ = other.charName_;
      charMid_ = other.charMid_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public char_info Clone() {
      return new char_info(this);
    }

    /// <summary>Field number for the "char_idx" field.</summary>
    public const int CharIdxFieldNumber = 1;
    private long charIdx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CharIdx {
      get { return charIdx_; }
      set {
        charIdx_ = value;
      }
    }

    /// <summary>Field number for the "char_name" field.</summary>
    public const int CharNameFieldNumber = 2;
    private string charName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CharName {
      get { return charName_; }
      set {
        charName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "char_mid" field.</summary>
    public const int CharMidFieldNumber = 3;
    private int charMid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CharMid {
      get { return charMid_; }
      set {
        charMid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as char_info);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(char_info other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CharIdx != other.CharIdx) return false;
      if (CharName != other.CharName) return false;
      if (CharMid != other.CharMid) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CharIdx != 0L) hash ^= CharIdx.GetHashCode();
      if (CharName.Length != 0) hash ^= CharName.GetHashCode();
      if (CharMid != 0) hash ^= CharMid.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CharIdx != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(CharIdx);
      }
      if (CharName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CharName);
      }
      if (CharMid != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CharMid);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CharIdx != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CharIdx);
      }
      if (CharName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CharName);
      }
      if (CharMid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CharMid);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(char_info other) {
      if (other == null) {
        return;
      }
      if (other.CharIdx != 0L) {
        CharIdx = other.CharIdx;
      }
      if (other.CharName.Length != 0) {
        CharName = other.CharName;
      }
      if (other.CharMid != 0) {
        CharMid = other.CharMid;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            CharIdx = input.ReadInt64();
            break;
          }
          case 18: {
            CharName = input.ReadString();
            break;
          }
          case 24: {
            CharMid = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
